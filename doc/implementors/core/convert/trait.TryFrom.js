(function() {var implementors = {};
implementors["libpebble"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;usize&gt; for <a class=\"enum\" href=\"libpebble/syscall/get_framebuffer/enum.GetFramebufferError.html\" title=\"enum libpebble::syscall::get_framebuffer::GetFramebufferError\">GetFramebufferError</a>","synthetic":false,"types":["libpebble::syscall::get_framebuffer::GetFramebufferError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;usize&gt; for <a class=\"enum\" href=\"libpebble/syscall/enum.EarlyLogError.html\" title=\"enum libpebble::syscall::EarlyLogError\">EarlyLogError</a>","synthetic":false,"types":["libpebble::syscall::EarlyLogError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;usize&gt; for <a class=\"enum\" href=\"libpebble/syscall/enum.CreateMemoryObjectError.html\" title=\"enum libpebble::syscall::CreateMemoryObjectError\">CreateMemoryObjectError</a>","synthetic":false,"types":["libpebble::syscall::CreateMemoryObjectError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;usize&gt; for <a class=\"enum\" href=\"libpebble/syscall/enum.MapMemoryObjectError.html\" title=\"enum libpebble::syscall::MapMemoryObjectError\">MapMemoryObjectError</a>","synthetic":false,"types":["libpebble::syscall::MapMemoryObjectError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;usize&gt; for <a class=\"struct\" href=\"libpebble/struct.Handle.html\" title=\"struct libpebble::Handle\">Handle</a>","synthetic":false,"types":["libpebble::Handle"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()